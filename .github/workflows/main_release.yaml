name: "Build"

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  workflow_dispatch:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      
jobs:
  build:
    name: Build 
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_proj_version.outputs.PKG_VERSION }}
      relnotes: ${{ steps.set_proj_version.outputs.RELNOTES }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0


    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.8.2
      with:
        dotnet-version: 6.0.x

    - name: Restore
      run: dotnet restore
      working-directory: src

    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: src

    - name: Test
      run: dotnet test
      working-directory: src

    - name: Pack
      run: dotnet pack --configuration Release -o finalpackage --no-build
      working-directory: src

    - name: Publish artifact
      uses: actions/upload-artifact@master
      with:
        name: nupkg
        path: src/finalpackage

    - name: Get version
      id: set_proj_version
      shell: pwsh
      run: |
        [xml]$nuspec = Get-Content src\WorkflowGenerator\WorkflowGenerator.csproj
        $version=$nuspec.project.propertygroup.versionprefix
        $relnotes=$nuspec.project.propertygroup.packagereleasenotes
        Write-Output "::set-output name=PKG_VERSION::$version"
        Write-Output "::set-output name=RELNOTES::$relnotes"

  deploy:
    needs: build
    environment:
      name: production
      url: https://www.nuget.org/packages/WorkflowGenerator
    name: Sign and publish
    runs-on: ubuntu-latest
    steps:
      - name: Download Package artifact
        uses: actions/download-artifact@v2
        with:
          name: nupkg

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.8.2
        with:
          dotnet-version: 6.0.x
      
      - name: Push to NuGet
        run: dotnet nuget push **/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate

      - name: Tag and Release
        id: tag_release
        uses: softprops/action-gh-release@v0.1.13
        with:
          body: ${{ needs.build.outputs.relnotes }}
          tag_name: ${{ needs.build.outputs.version }}
          files: |
            **/*.nupkg